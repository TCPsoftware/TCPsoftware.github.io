<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo + CloudFlare = 速度飞起</title>
    <url>/2020/02/hexo-with-cloudflare/</url>
    <content><![CDATA[<p>昨天配置了 Google、Baidu、Bing搜索引擎提交，不过比较悲催的是 Github Pages 服务器拒绝 BaiduSpider ，整个站点根本不能出现在 Baidu 里面好么！！ 另一方面，速度过慢，github pages 在国内速度，不太理想，所以用 CloudFlare 老牌 cdn 加速整站，还可以被 BaiduSpider 收录。<a id="more"></a></p>
<p>参考了这篇文章： <a href="https://blog.csdn.net/qianghaohao/article/details/83714575" rel="external nofollow noopener noreferrer" target="_blank">基于 Hexo 的 GitHub Pages 配置 CloudFlare CDN_qhh0205-CSDN博客</a></p>
<h2 id="准备好-GitHub-和-CloudFlare"><a href="#准备好-GitHub-和-CloudFlare" class="headerlink" title="准备好 GitHub 和 CloudFlare"></a>准备好 GitHub 和 CloudFlare</h2><p>有一个 github 账户，添加 username.github.io 库，把 hexo 发布到存储库，不多说了。</p>
<p>注册 CloudFlare 账号并登录。</p>
<h2 id="在-CloudFlare-添加站点"><a href="#在-CloudFlare-添加站点" class="headerlink" title="在 CloudFlare 添加站点"></a>在 CloudFlare 添加站点</h2><p>在 CloudFlare 添加站点，并检查 DNS 记录，确认导入 CloudFlare 中。</p>
<p>在域名购买商处修改 DNS 服务器为 CloudFlare 提供的两个 DNS 服务器，等待生效之后继续操作</p>
<p><strong>注意</strong> ：修改 DNS 服务器可能会导致某些记录丢失（像 Google 域名验证、letsencrypt 域名验证）（因为不是全部同步过去），所以在更改之前可以在旧 DNS 控制台，记录下各个 DNS 记录（截屏或手抄），后期可再写入新纪录</p>
<p><strong>Ps</strong>：实验表明： CloudFlare 会同步大部分DNS记录，但是还是有部分子域名会漏掉，看个人情况是否手动记录原 DNS </p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210152724656.png" alt="image-20200210152724656"></p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210112341702.png" alt="image-20200210112341702"></p>
<p>修改 DNS 服务器：</p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210112513410.png" alt="image-20200210112513410"></p>
<p>等待生效，可用 <code>nslookup -q=ns tcpsoft.app</code> 查询 DNS 解析服务器情况（本地的好像更新有点慢），其实 CloudFlare 在检测到 DNS 服务器修改成功之后会发邮件通知的。</p>
<p>然后在 CloudFlare 检查域名服务器，进行下一步操作，设置一些网站的自定义选项，包括是否开启浏览器到CF</p>
<p>的安全连接，是否开启CF到源服务器的安全连接，是否启用 Brotli 压缩来传输数据等。</p>
<p>然后就可以查看 DNS 设置，有黄色云图标的就是 CloudFlare 开启代理的</p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210120918605.png" alt="image-20200210120918605"></p>
<p>我们可以用 dig （linux）或 nslookup （linux、Windows）查看域名解析情况。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@Mi-CP /m/c/U/CP# dig blog.tcpsoft.app</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Ubuntu &lt;&lt;&gt;&gt; blog.tcpsoft.app</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 45170</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;blog.tcpsoft.app.              IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">blog.tcpsoft.app.       900     IN      CNAME   tcpsoftware.github.io.</span><br><span class="line">tcpsoftware.github.io.  900     IN      A       185.199.110.153</span><br><span class="line">tcpsoftware.github.io.  900     IN      A       185.199.108.153</span><br><span class="line">tcpsoftware.github.io.  900     IN      A       185.199.111.153</span><br><span class="line">tcpsoftware.github.io.  900     IN      A       185.199.109.153</span><br><span class="line"></span><br><span class="line">;; Query time: 1990 msec</span><br><span class="line">;; SERVER: 223.5.5.5#53(223.5.5.5)</span><br><span class="line">;; WHEN: Mon Feb 10 12:12:47 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 133</span><br><span class="line"></span><br><span class="line">root@Mi-CP /m/c/U/CP# nslookup blog.tcpsoft.app</span><br><span class="line">Server:         223.5.5.5</span><br><span class="line">Address:        223.5.5.5#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">blog.tcpsoft.app        canonical name = tcpsoftware.github.io.</span><br><span class="line">Name:   tcpsoftware.github.io</span><br><span class="line">Address: 185.199.110.153</span><br><span class="line">Name:   tcpsoftware.github.io</span><br><span class="line">Address: 185.199.108.153</span><br><span class="line">Name:   tcpsoftware.github.io</span><br><span class="line">Address: 185.199.109.153</span><br><span class="line">Name:   tcpsoftware.github.io</span><br><span class="line">Address: 185.199.111.153</span><br><span class="line"></span><br><span class="line">root@Mi-CP /m/c/U/CP#</span><br></pre></td></tr></table></figure>

<p>我们可以看到解析了四个 IP，而我的 DNS 设置只有一个 CNAME，查询这个 IP，发现是 CDN，设置成功。</p>
<h2 id="开启DNSSEC，防止-DNS-劫持"><a href="#开启DNSSEC，防止-DNS-劫持" class="headerlink" title="开启DNSSEC，防止 DNS 劫持"></a>开启DNSSEC，防止 DNS 劫持</h2><p>在 CloudFlare 的 DNS 管理面板往下翻可以看到 DNSSEC 选项，DNSSEC 是 DNS 安全扩展，采用加密方式，防止 DNS 劫持</p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210122448916.png" alt="image-20200210122448916"></p>
<p>CF 提供了十多个参数，转到域名注册商处，填入注册商要求的对应参数即可。</p>
<p>等待十多分钟至一个小时，CloudFlare 上的 DNSSEC 会检测到设置成功，提示 Success！</p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210125156256.png" alt="image-20200210125156256"></p>
<h2 id="又掉坑：“重定向次数过多”"><a href="#又掉坑：“重定向次数过多”" class="headerlink" title="又掉坑：“重定向次数过多”"></a>又掉坑：“重定向次数过多”</h2><p>刚才的配置好之后，满以为可以运行的飞起来了，结果，打 ！不 ！开 ！了 ！</p>
<img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210143346231.png" alt="image-20200210143346231" style="zoom:50%;">

<p>一番查询发现是：CloudFlare SSL 选项开的是 Flexible。</p>
<p><img src="../../blog-images/2020/hexo-with-cloudflare/image-20200210143616798.png" alt="image-20200210143616798"></p>
<p>下面文字摘自 参考链接：<a href="https://www.wpzhiku.com/wordpress-wang-zhan-shi-yong-cloudflare-hou-ti-shi-jiang-nin-chong-ding-xiang-de-ci-shu-guo-duo-de-yuan-yin-ji-jie-jue-ban-fa/" rel="external nofollow noopener noreferrer" target="_blank">WordPress 网站使用 CloudFlare 后提示“将您重定向的次数过多” 的原因及解决办法 _WordPress智库</a></p>
<p>Cloudflare CDN 配置</p>
<ul>
<li><p>Off：不开启https。</p>
</li>
<li><p>Flexible：当我们的源网站没有配置 HTTPS 支持时，启用这个选项，Cloudflare 会在回源的时候通过 HTTP 协议访问我们的网站。</p>
</li>
<li><p>Full：当我们的源网站支持 HTTPS，但是 HTTPS 证书和域名不匹配或者是自签名证书时，Cloudflare 会通过 HTTPS 协议访问源网站，但不会验证证书，也就是说，即使我们的源网站提供的 HTTPS 证书不受浏览器信任，Cloudflare 也会通过 HTTPS 回源网站。</p>
</li>
<li><p>Full(strict)：当我们的源网站支持 HTTP ，并且证书有效时（未过期且受信任）。Cloudflare 会通过 HTTPS 协议访问源网站，并在每个请求过程中验证证书。</p>
</li>
</ul>
<p>了解了上面各个设置的功能，我们来看一下 Cloudflare 的循环重定向问题是怎么出现的，在 Cloudflare 中开启了 SSL 后，访问网站时出现循环重定向需满足下面两个条件：</p>
<ol>
<li>SSL 中设置了 Flexible，CDN 以 HTTP 协议回源网站。</li>
<li>源网站支持 HTTPS，并且设置了通过 HTTP 协议访问时，自动跳转到 HTTPS 协议。</li>
</ol>
<p>到这里，可能就有朋友发现问题了，我们访问 Cloudflare 的 CDN 服务器的时候，是通过 HTTPS 访问的，CDN 访问源网站的时候，是通过 HTTP 访问的，源网站上 HTTP 又自动跳转了 HTTPS，完美的一个循环重定向。重定向的次数多了，浏览器就撂挑子报出了 ERR_TOO_MANY_REDIRECTS 的错误。</p>
<h2 id="CloudFlare-造成重定向的次数过多问题的解决办法"><a href="#CloudFlare-造成重定向的次数过多问题的解决办法" class="headerlink" title="CloudFlare 造成重定向的次数过多问题的解决办法"></a>CloudFlare 造成重定向的次数过多问题的解决办法</h2><p>知道了循环重定向的原因，我们也就知道了怎么解决这个问题，通过测试，下面的两种设置方法都可以解决 Cloudflare 循环重定向的问题。</p>
<ul>
<li>SSL 中选择 Full(strict) 或者 Full(strict)，让 CDN 回源的时候使用 HTTPS 的方式回源，没有 HTTP 什么事了，就不会跳来跳去了</li>
<li>源网站不设置 HTTPS 支持或者 不设置 HTTP 跳转 HTTPS，让 Cloudflare 回源的时候使用 HTTP 方式获取资源。</li>
</ul>
<p>修改了 CloudFlare 设置后，可能需要过几分钟或清理浏览器缓存后才能生效。</p>
<p>除了 Cloudflare，使用其他 CDN 提供商的时候，也可能会出现这个问题，如果设置了 CDN 后，遇到了 Chrome 报重定向次数过多的问题，可以通过上面的思路查找问题。</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>cdn</tag>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo seo 优化</title>
    <url>/2020/02/hexo-seo/</url>
    <content><![CDATA[<p>害呀，hexo 都做了这么多了，干脆把google 统计一起加上去得了。Google Analytics、Google添加站点，baidu 添加站点、bing 添加站点，通通加上！</p>
<a id="more"></a>

<h2 id="google-analytics"><a href="#google-analytics" class="headerlink" title="google analytics"></a>google analytics</h2><ul>
<li><p>访问<a href="https://analytics.google.com/" rel="external nofollow noopener noreferrer" target="_blank">Google Analytics</a>，需要科学上网并用google账号登录，之后按照提示填写网站信息开通GA服务，获取统计ID。</p>
</li>
<li><p>编辑<code>主题配置文件</code>, 找到关键字<code>google_analytics</code> , 删除注释<code>#</code>并填写获取到的统计ID</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">tracking_id:</span> <span class="string">UA-XXXXXXXXX-X</span> <span class="comment"># &lt;app_id&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h2><p>在 source 目录下添加 robots.txt ，编写爬虫规则，下面是我的 robots.txt</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">User-agent:</span> <span class="string">*</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/archives/</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/tags/</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/categories/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/vendors/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/js/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/lib/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/css/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/fonts/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/vendors/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/fancybox/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/old/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Sitemap:</span> <span class="string">http://blog.tcpsoft.app/sitemap.xml</span></span><br><span class="line"><span class="attr">Sitemap:</span> <span class="string">http://blog.tcpsoft.app/baidusitemap.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="Google-Search-Console"><a href="#Google-Search-Console" class="headerlink" title="Google Search Console"></a>Google Search Console</h2><p><img src="../../blog-images/2020/hexo-seo/image-20200209180807809.png" alt="image-20200209180807809"></p>
<p>提交整个域名或者某个子域名到 google，我这里提交“网域”即整个域名。</p>
<p>输入tcpsoft.app，点继续，会开始验证。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209181014294.png" alt="image-20200209181014294"></p>
<p>在域名购买处修改 DNS 记录或者自己的 DNS 托管商处修改，添加一条特定的 TXT 记录。</p>
<p><strong>小贴士</strong>  用 linux 命令<code>dig hostname</code> 或 <code>nslookup -q=TXT hostname</code>可查询DNS是否生效（后者windows也可用）</p>
<p>这个地方有一点坑的是需要设置 name 为 @，值为 google-site-verification=XXXXXX ，而不是 name 为 google-site-verification</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209184813570.png" alt="image-20200209184813570"></p>
<p>设置记录，稍等片刻（或者等半天）记录生效之后，点击验证，验证成功</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209184707276.png" alt="image-20200209184707276"></p>
<p>之后就可以进行管理辣。</p>
<p>接下来提交 sitemap，站点地图，帮助机器人抓取网站</p>
<p>之后就可以通过 google 搜索命令 <code>site:blog.tcpsoft.app</code> 查看站点收录情况</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209185519286.png" alt="image-20200209185519286"></p>
<h2 id="Baidu搜索资源平台"><a href="#Baidu搜索资源平台" class="headerlink" title="Baidu搜索资源平台"></a>Baidu搜索资源平台</h2><p>打开Baidu搜索资源平台，添加网站</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209201555631.png" alt="image-20200209201555631"></p>
<p>填入主域名 <code>https://tcpsoft.app</code> 选择网站分类，准备验证，可通过文件验证，html 标签验证，CNAME 验证，此处我选择 CNAME 验证，将 H9JpujyZsP.tcpsoft.app 使用 CNAME 解析到 ziyuan.baidu.com。和之前一样，在托管商添加DNS记录。</p>
<p><strong>小贴士</strong>  可用 <code>dig hostname</code> 或 <code>nslookup -q=CNAME hostname</code> 可查看DNS是否生效，同上文。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209202629054.png" alt="image-20200209202629054"></p>
<p>添加记录生效后就点击完成验证，稍等一会儿，提示验证成功，可以选择批量添加子站。</p>
<p>和 google 不同，这里的需要手动一条条添加。（还有一点隐私保护的味道呢 [滑稽] ）手动填入子域名即可。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209203148808.png" alt="image-20200209203148808"></p>
<p>通过 html 标签验证添加，会要求 head 中添加标签，此处 hexo 有集成，在 hexo 修改配置就可。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209204126442.png" alt="image-20200209204126442"></p>
<p>复制 baidu 提供的 content，在 next 主题的 _config.yml中搜索 <code>baidu_site_verification:</code> 填入，然后再 <code>hexo g -d</code> 发布一次，检查有标签后，点击完成验证。</p>
<p>验证完成 ，就可以查看站点，我等了半天 Baidu 也抓不到站点，到处看了一圈发现是 github 屏蔽了Baidu 爬虫，所以需要其他方式。</p>
<p>首先是把根目录下的 baidusitemap.xml 提交给Baidu平台，不多介绍，自己摸索</p>
<h2 id="Baidu-自动推送"><a href="#Baidu-自动推送" class="headerlink" title="Baidu 自动推送"></a>Baidu 自动推送</h2><p>于是就手动提交 sitemap 并且开启 hexo next 集成的自动推送链接功能，打开站点主题<code>theme/next/_config.yml</code>文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>however~，貌似 uBlock Origin 会拦截 Google Analytics 和 Baidu 自动提交，这就比较悲催了</p>
<h2 id="hexo-自动提交-Baidu"><a href="#hexo-自动提交-Baidu" class="headerlink" title="hexo 自动提交 Baidu"></a>hexo 自动提交 Baidu</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<p>然后修改 hexo 的配置文件，添加 <code>baidu_url_submit:</code> ，并修改 <code>deploy</code></p>
<p><strong>注意</strong>：本插件的配置文件中包含秘钥， 如果要把 hexo 博客整体放在 github ，需要放在私有仓库。</p>
<p><strong>注意</strong>：这里 host 里填入的域名是在 Baidu站长平台 添加好的域名</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">5</span> <span class="comment">## 提交最新的5个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">blog.tcpsoft.app</span> <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">your_token</span> <span class="comment">## 请注意这是您的秘钥， 请不要发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class="line">  <span class="comment"># xz_appid: 'xxxxxx' ## 你的熊掌号 appid</span></span><br><span class="line">  <span class="comment"># xz_token: 'xxxxxx' ## 你的熊掌号 token</span></span><br><span class="line">  <span class="comment"># xz_count: 10 ## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span></span><br></pre></td></tr></table></figure>

<p>不过我认为熊掌号没什么用，需要的话可以添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/XXXX/XXXX</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># 百度</span></span><br><span class="line"><span class="comment"># - type: baidu_xz_url_submitter # 百度熊掌号</span></span><br></pre></td></tr></table></figure>

<p>执行hexo deploy的时候，新的链接就会被推送了。</p>
<p>当你 <code>hexo g -d</code>，看到这个的时候，说明配置成功了</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209224126611.png" alt="image-20200209224126611"></p>
<h2 id="其他的中国特色搜索引擎"><a href="#其他的中国特色搜索引擎" class="headerlink" title="其他的中国特色搜索引擎"></a>其他的中国特色搜索引擎</h2><p>不说了，想设置Sougou、360、神马可以参考这篇： <a href="https://tding.top/archives/4ea54752.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo-NexT 博客提交搜索引擎收录 | 小丁的个人博客</a></p>
<h2 id="Bing"><a href="#Bing" class="headerlink" title="Bing"></a>Bing</h2><p>搜索并打开 <a href="https://www.bing.com/toolbox/webmaster/" rel="external nofollow noopener noreferrer" target="_blank">Bing - Webmaster Tools</a>，Bing网站搜索管理。然后登陆微软账号或者 google 账号，看起来像这样：</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209235529136.png" alt="image-20200209235529136"></p>
<p>由于我已经有了 Google Search Console（第三条提到的），就直接绑定 Google 账号同步数据就可以了。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209235651847.png" alt="image-20200209235651847"></p>
<p>点击“继续访问”之后会跳转到 google 登陆，登录之后授权 Bing 就可以了。读取到站点数据，导入。</p>
<p><img src="../../blog-images/2020/hexo-seo/image-20200209235919325.png" alt="image-20200209235919325"></p>
<p>然后也需要向 Bing 提交sitemap，同上 Google。</p>
<h2 id="修改-url-格式"><a href="#修改-url-格式" class="headerlink" title="修改 url 格式"></a>修改 url 格式</h2><blockquote>
<p>seo搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面</p>
</blockquote>
<p>但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，所以我把url格式改为 sitename/year/mounth/title。</p>
<p>修改 hexo 配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:title/</span></span><br></pre></td></tr></table></figure>

<h2 id="出站链接-“nofollow”"><a href="#出站链接-“nofollow”" class="headerlink" title="出站链接 “nofollow”"></a>出站链接 “nofollow”</h2><p>外链越多，搜索引擎给此站点的权重就越低，即排位越后。为了提高权重，可以禁止搜索引擎跟进外链，添加 nofollow 属性就可以做到。一个一个页面添加跟定是不现实的，当然是选择用插件。</p>
<p>先在 hexo 博客根目录安装插件，插件有<code>hexo-autonofollow</code> 和 <code>hexo-filter-nofollow</code> ，filter要好用一些，他们两个的差别可以参考作者的博客：<a href="https://blog.skk.moe/post/hexo-filter-nofollow-joined-hexo-official-plugin/" rel="external nofollow noopener noreferrer" target="_blank">hexo-filter-nofollow - Hexo 官方的 nofollow 插件 | Sukka’s Blog</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-filter-nofollow --save</span><br></pre></td></tr></table></figure>

<p>编辑 hexo 配置文件，添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># post：仅处理文章内容，site：处理全站所有页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'exclude1.com'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'exclude2.com'</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>seo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo + gitalk，满满的都是坑。</title>
    <url>/2020/02/hexo-with-gitalk/</url>
    <content><![CDATA[<p>今日看到博客的评论功能，就想整一个，本以为跟前两天添加hexo插件查不多，结果，，爬坑，又掉坑，爬坑又掉坑……<a id="more"></a></p>
<hr>
<h3 id="安装gitalk"><a href="#安装gitalk" class="headerlink" title="安装gitalk"></a>安装gitalk</h3><p>安装gitalk没什么，有很多博文有介绍，这里贴一篇就好，修改主题配置的部分很精简，我喜欢。</p>
<ul>
<li>参考链接1： <a href="https://yunhao.space/2018/07/04/hexo-next-gitalk-comments-tutor/" rel="external nofollow noopener noreferrer" target="_blank">Hexo NexT 添加 Gitalk评论功能 | Andylmns</a></li>
</ul>
<p>注意域名是自己的 github pages 或者自定义域名就好。</p>
<p>注意每一次发布新文章之后都需要去博客登陆刷新一下评论，插件会在你的 repo 里面新建 issue。</p>
<p>我之前有篇文章叫《<a href="https://blog.tcpsoft.app/2019/12/29/Hi-Im-Cortana/">Hi, I’m Cortana.</a>》，我点开这个做实验看能不能使用评论功能，原地址是</p>
<pre>https://blog.tcpsoft.app/2019/12/29/Hi,%20I'm%20Cortana/</pre>
<hr>
<h3 id="艰难爬坑"><a href="#艰难爬坑" class="headerlink" title="艰难爬坑"></a>艰难爬坑</h3><p><strong>[ 以下多链接警告，请选择性阅读 ]</strong></p>
<h4 id="报错：redirect-uri-mismatch"><a href="#报错：redirect-uri-mismatch" class="headerlink" title="报错：redirect_uri_mismatch"></a>报错：redirect_uri_mismatch</h4><ul>
<li>链接1： <a href="https://blog.csdn.net/liu1340308350/article/details/86304026#commentsedit" rel="external nofollow noopener noreferrer" target="_blank">gitalk报错问题_liuurick的博客-CSDN博客</a></li>
</ul>
<p>看了感觉也没啥用，根据指示转到下面这篇，写的比较详细，但是是没有解决问题</p>
<ul>
<li>链接2： <a href="https://blog.csdn.net/w47_csdn/article/details/88858343" rel="external nofollow noopener noreferrer" target="_blank">[gitalk] 解决配置gitalk插件后初始化登录时跳转回首页_Bo的博客-CSDN博客</a></li>
</ul>
<p>我看了看我的配置，根据前面的指导写的最初的配置是这样子的：</p>
<p><img src="../../blog-images/2020/hexo-with-gitalk/github-config.png" alt="github-config"></p>
<h4 id="http-https-的问题？"><a href="#http-https-的问题？" class="headerlink" title="http https 的问题？"></a>http https 的问题？</h4><p>又看了看我的请求 url，确实是都是 https，没有问题啊</p>
<p>后来又找到这个 gitalk issue 115 和 162，貌似是个很“权威”的解答</p>
<ul>
<li>链接3： <a href="https://github.com/gitalk/gitalk/issues/115#event-1539518527">hexo next 主题配置 gitalk 评论后无法初始化创建 issue · Issue #115 · gitalk/gitalk</a></li>
<li>链接4： <a href="https://github.com/gitalk/gitalk/issues/162">登录报错/?error=redirect_uri_mismatch&amp; · Issue #162 · gitalk/gitalk</a></li>
</ul>
<h4 id="加-？"><a href="#加-？" class="headerlink" title="加 / ？"></a>加 / ？</h4><p>好像回调地址里面要加个 <code>/</code> ？加就加吧，然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Authorization callback URL:</span><br><span class="line">https:&#x2F;&#x2F;blog.tcpsoft.app&#x2F;</span><br></pre></td></tr></table></figure>

<p>也不行。仍然跳回主页，并提示 redirect_uri_mismatch </p>
<p>后来我又尝试了：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;tcpsoftware.github.io</span><br><span class="line">https:&#x2F;&#x2F;tcpsoftware.github.io</span><br><span class="line">http:&#x2F;&#x2F;tcpsoftware.github.io&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;tcpsoftware.github.io&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;blog.tcpsoft.app</span><br><span class="line">https:&#x2F;&#x2F;blog.tcpsoft.app</span><br><span class="line">http:&#x2F;&#x2F;blog.tcpsoft.app&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;blog.tcpsoft.app&#x2F;</span><br><span class="line">tcpsoftware.github.io</span><br><span class="line">tcpsoftware.github.io</span><br><span class="line">blog.tcpsoft.app</span><br><span class="line">blog.tcpsoft.app</span><br></pre></td></tr></table></figure>

<p>心累</p>
<p>然后忽然在 issue 162 翻到这个？</p>
<p><img src="../../blog-images/2020/hexo-with-gitalk/image-20200209140447713.png" alt="image-20200209140447713"></p>
<h4 id="中文？？！"><a href="#中文？？！" class="headerlink" title="中文？？！"></a>中文？？！</h4><p>🤨</p>
<p>🤔</p>
<p> 回头看了看我的 url，貌似并没有中文。</p>
<pre>https://blog.tcpsoft.app/2019/12/29/Hi,%20I'm%20Cortana/</pre>
<p>url 编码导致的问题？</p>
<p>我尝试换一个文章，在上一篇 hexo 里，可了！！它的链接是，</p>
<pre>https://blog.tcpsoft.app/2020/02/06/hexo-changes/</pre>
<p>呐，没有 url 编码，没有中文</p>
<p>🤔</p>
<p><img src="../../blog-images/2020/hexo-with-gitalk/issue.png" alt="issue"></p>
<h4 id="编码问题。"><a href="#编码问题。" class="headerlink" title="编码问题。"></a>编码问题。</h4><p>url 里面不要有特殊符号，刚才链接里面完美命中（而且链接看起来很丑可读性很差）</p>
<p>有特殊符号不能被匹配规则匹配到（像我刚才链接里面的 <code>, &#39;</code>）</p>
<hr>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p><code>hexo new passage_name</code></p>
<p>新建文章的时候想好一个优雅的名字，如果遇到符号或者多单词，可以考虑用：</p>
<h5 id="驼峰式命名法（小驼峰命名法）"><a href="#驼峰式命名法（小驼峰命名法）" class="headerlink" title="驼峰式命名法（小驼峰命名法）"></a>驼峰式命名法（小驼峰命名法）</h5><p><code>hexo new helloImCortana</code></p>
<h5 id="帕斯卡命名法（大驼峰命名法）"><a href="#帕斯卡命名法（大驼峰命名法）" class="headerlink" title="帕斯卡命名法（大驼峰命名法）"></a>帕斯卡命名法（大驼峰命名法）</h5><p><code>hexo new HelloImCortana</code></p>
<h5 id="匈牙利命名法（本文无关）"><a href="#匈牙利命名法（本文无关）" class="headerlink" title="匈牙利命名法（本文无关）"></a>匈牙利命名法（本文无关）</h5><p><code>hexo new sHelloImCortana</code></p>
<p>变量类型+变量名（逃）</p>
<h5 id="下划线命名法"><a href="#下划线命名法" class="headerlink" title="下划线命名法"></a>下划线命名法</h5><p><code>hexo new hello_Im_Cortana</code></p>
<h5 id="短横线分隔（Github风格-编程必报错）"><a href="#短横线分隔（Github风格-编程必报错）" class="headerlink" title="短横线分隔（Github风格 编程必报错）"></a>短横线分隔（Github风格 编程必报错）</h5><p><code>hexo new hello-Im-Cortana</code></p>
<hr>
<h3 id="再说一句"><a href="#再说一句" class="headerlink" title="再说一句"></a>再说一句</h3><p>（其实上面尝试的那一大堆链接，除了最后四个没有 http https 协议的之外，其他的都是可以的）</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 大换血</title>
    <url>/2020/02/hexo-changes/</url>
    <content><![CDATA[<p>今天闲来无事，折腾博客（其实是写 gdb 结果得更新一下 hexo ），然后这个博客就大换血了。</p>
<p>我干了啥呢：<a id="more"></a></p>
<hr>
<h2 id="Typora-的图片存放路径"><a href="#Typora-的图片存放路径" class="headerlink" title="Typora 的图片存放路径"></a>Typora 的图片存放路径</h2><p>Typora 的图片存放路径和文章图片 URL 的问题</p>
<ul>
<li>参考链接1： <a href="https://blog.csdn.net/qq_43096199/article/details/90642252" rel="external nofollow noopener noreferrer" target="_blank">Typora设置图片存储路径_momorn博客-CSDN博客</a></li>
<li>参考链接2：<a href="https://cn.bing.com/search?q=typora+设置图片目录&qs=n&form=QBRE&sp=-1&pq=typora+设置tu'pian'mu'lu&sc=0-22&sk=&cvid=A0959CE1255444B0B3F7E20041DC5A24" rel="external nofollow noopener noreferrer" target="_blank">typora 设置图片目录 - 国内版 Bing</a></li>
</ul>
<h2 id="hexo-添加主页页面，tags等"><a href="#hexo-添加主页页面，tags等" class="headerlink" title="hexo 添加主页页面，tags等"></a>hexo 添加主页页面，tags等</h2><p>hexo 主页上的 tags、categories、archive、about 等页面，手动添加。</p>
<ul>
<li>参考链接1： <a href="https://cn.bing.com/search?q=hexo+next+tag" rel="external nofollow noopener noreferrer" target="_blank">hexo next tag - 国内版 Bing</a></li>
<li>参考链接2： <a href="https://www.jianshu.com/p/3d2e7b3ec182" rel="external nofollow noopener noreferrer" target="_blank">hexo+next+GitHub搭建静态博客(三)-添加tags和categories - 简书</a></li>
<li>参考链接3： <a href="https://blog.csdn.net/lijiajun95/article/details/53862528" rel="external nofollow noopener noreferrer" target="_blank">最详细的Hexo Next主题配置教程_Web全栈笔记-CSDN博客</a></li>
</ul>
<h2 id="hexo-打赏"><a href="#hexo-打赏" class="headerlink" title="hexo 打赏"></a>hexo 打赏</h2><p>设置 next 主题配置下的 reward_settings，但和文章中说的有些小不同</p>
<ul>
<li>参考链接1： <a href="https://cn.bing.com/search?q=next+打赏" rel="external nofollow noopener noreferrer" target="_blank">next 打赏 - 国内版 Bing</a></li>
<li>参考链接2： <a href="https://blog.csdn.net/lcyaiym/article/details/76796545" rel="external nofollow noopener noreferrer" target="_blank">hexo的next主题打赏_linux,hexo,next_lcyaiym的专栏-CSDN博客</a></li>
<li>如何生成二维码，略</li>
</ul>
<h2 id="hexo-添加版权"><a href="#hexo-添加版权" class="headerlink" title="hexo 添加版权"></a>hexo 添加版权</h2><p>这里我遵循<a href="https://creativecommons.org/licenses/by/4.0/legalcode.zh-Hans" rel="external nofollow noopener noreferrer" target="_blank">知识共享(Creative Commons) 署名 4.0 协议国际版</a>，可以在next主题的 config.yml 里面的 creative_commons 配置</p>
<ul>
<li>参考链接1： <a href="https://creativecommons.org/licenses/by/4.0/legalcode.zh-Hans" rel="external nofollow noopener noreferrer" target="_blank">知识共享(Creative Commons) 署名 4.0 协议国际版</a></li>
</ul>
<h2 id="hexo-添加版权后链接错误问题"><a href="#hexo-添加版权后链接错误问题" class="headerlink" title="hexo 添加版权后链接错误问题"></a>hexo 添加版权后链接错误问题</h2><p>本来应该是 http:// blog.tcpsoft.app/2020/02/06/hexo-changes/，</p>
<p>但是变成了 /http:/blog.tcpsoft.app/2020/02/06/hexo-changes/</p>
<p>所以就手动写了个 js 脚本，添加到 source/js 文件夹，并修改 next 的一个配置文件。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加&lt;script&gt;到 \themes\next\layout\_scripts\index.swig</span></span><br><span class="line"><span class="comment">//&lt;script src="/js/diy.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">link = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"post-copyright-link"</span>)[<span class="number">0</span>].children[<span class="number">1</span>];</span><br><span class="line">href = link.getAttribute(<span class="string">"href"</span>).replace(<span class="string">"/http:/"</span>,<span class="string">"http://"</span>);</span><br><span class="line">link.setAttribute(<span class="string">"href"</span>,href);</span><br></pre></td></tr></table></figure>

<h2 id="解决了显示混乱问题"><a href="#解决了显示混乱问题" class="headerlink" title="解决了显示混乱问题"></a>解决了显示混乱问题</h2><p>我之前的博客迁移，导致了显示混乱问题（即我已有 css 而 hexo 又给我加上一套主题的显示方案），此处用 hexo 的 skip_render 设置即可，不过要匹配文件文件夹还是有点小坑的 [坑爹预警]</p>
<ul>
<li>参考链接1： <a href="https://cn.bing.com/search?q=skip_render" rel="external nofollow noopener noreferrer" target="_blank">skip_render - 国内版 Bing</a></li>
<li>参考链接2（有坑）：<a href="https://www.maoxuner.cn/2017/03/10/hexo-skip-render.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo渲染时排除部分文件或目录 - 二次元の技术宅</a></li>
<li>参考链接3： <a href="https://github.com/hexojs/hexo/issues/1146">如何不处理source目录下某个子目录的所有文件，仅仅是将其copy到public目录中对应目录？ · Issue #1146 · hexojs/hexo  Github.com</a></li>
<li>参考链接4： <a href="https://github.com/hexojs/hexo/issues/1333">无论skip_render如何设置都无法跳过source目录下的某个js文件目录，生成出错 · Issue #1333 · hexojs/hexo  Github.com</a></li>
</ul>
<h2 id="博客-CDN-加速"><a href="#博客-CDN-加速" class="headerlink" title="博客 CDN 加速"></a>博客 CDN 加速</h2><p>看了百度云加速，知道创宇云加速，cloud flare，暂时还是不弄了，现阶段博客是基于 GitHub Pages + Hexo ，图片使用腾讯云存储。后期可能考虑加 CDN <del>或整站迁移腾讯云存储（因域名无法备案及COS网站的处理问题已放弃此方案）</del>。</p>
<h2 id="sitemap-功能"><a href="#sitemap-功能" class="headerlink" title="sitemap 功能"></a>sitemap 功能</h2><p>hexo、next 主题的 sitemap 功能，帮助搜索引擎收录站点（不用修改 hexo 配置文件）<br>注：这些 npm 命令都是在本地博客根目录下执行，下同</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<ul>
<li>参考链接1： <a href="https://cn.bing.com/search?q=hexo+next+sitemap" rel="external nofollow noopener noreferrer" target="_blank">hexo next sitemap - 国内版 Bing</a></li>
<li>参考链接2： <a href="https://www.jianshu.com/p/ab44b916a8b6" rel="external nofollow noopener noreferrer" target="_blank">Hexo 博客添加百度sitemap - 简书</a></li>
<li>参考链接3： <a href="https://www.jianshu.com/p/9c2d6db2f855" rel="external nofollow noopener noreferrer" target="_blank">hexo(3)-生成sitemap站点地图 - 简书</a></li>
</ul>
<h2 id="RSS-订阅功能"><a href="#RSS-订阅功能" class="headerlink" title="RSS 订阅功能"></a>RSS 订阅功能</h2><p>（不用修改 hexo 配置文件）（修改next主题配置以显示按钮）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">"/themes/next/_config.yml"</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">......</span></span><br><span class="line">  <span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure>
<ul>
<li>参考链接1： <a href="https://blog.csdn.net/u010820857/article/details/82086232" rel="external nofollow noopener noreferrer" target="_blank">hexo 安装 sitemap 和 <strong>rss</strong>_hexo 安装 sitemap 和 <strong>rss</strong>,hexo,hexo sitemap _hiekay的博客-CSDN博客</a></li>
</ul>
<h2 id="站点搜索功能"><a href="#站点搜索功能" class="headerlink" title="站点搜索功能"></a>站点搜索功能</h2><p>安装插件，然后修改 next 配置文件，，，</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<ul>
<li>参考链接1： <a href="https://www.cnblogs.com/syd192/p/6074323.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo的Next主题配置 - syd192 - 博客园</a></li>
<li>参考链接2： <a href="https://blog.csdn.net/lijing742180/article/details/87970909" rel="external nofollow noopener noreferrer" target="_blank">Hexo Next 主题中添加本地搜索功能_hexo,next主题,next 搜索_媛测-CSDN博客</a></li>
</ul>
<h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><p>同样的，安装插件，修改配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>

<p>参考链接1： <a href="https://www.chingow.cn/posts/e0970dc8.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo+NexT(v7.0+) 搭建博客：功能强化 | Chingow’s Blog</a></p>
<h2 id="文章字数统计和阅读时间估计"><a href="#文章字数统计和阅读时间估计" class="headerlink" title="文章字数统计和阅读时间估计"></a>文章字数统计和阅读时间估计</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p>参考链接1： <a href="https://victoryofymk.github.io/2018/10/23/Hexo个性化next主题/" rel="external nofollow noopener noreferrer" target="_blank">o(五)：个性化 next theme | 执行者的博客</a></p>
<h2 id="社交按钮"><a href="#社交按钮" class="headerlink" title="社交按钮"></a>社交按钮</h2><p>参考链接1： <a href="https://victoryofymk.github.io/2018/10/23/Hexo个性化next主题/" rel="external nofollow noopener noreferrer" target="_blank">o(五)：个性化 next theme | 执行者的博客</a></p>
<h2 id="阅读进度"><a href="#阅读进度" class="headerlink" title="阅读进度"></a>阅读进度</h2><p>设置 next 主题配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="hexo-设置阅读全文"><a href="#hexo-设置阅读全文" class="headerlink" title="hexo 设置阅读全文"></a>hexo 设置阅读全文</h2><p>其实也和文章的有点不一样，可能是因为 next 版本不一样，我设置的是 next 配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>参考链接1： <a href="https://www.jianshu.com/p/78c218f9d1e7" rel="external nofollow noopener noreferrer" target="_blank">Hexo-设置阅读全文 - 简书</a></p>
<h2 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h2><p>只需要修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> 。（好像改了更丑了，后来改回来了）</p>
<p>参考链接1： <a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" rel="external nofollow noopener noreferrer" target="_blank">Hexo博客优化之Next主题美化_huangpiao-CSDN博客</a> </p>
<h2 id="设置博客底部布局"><a href="#设置博客底部布局" class="headerlink" title="设置博客底部布局"></a>设置博客底部布局</h2><p>参考链接1： <a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" rel="external nofollow noopener noreferrer" target="_blank">Hexo博客优化之Next主题美化_huangpiao-CSDN博客</a> </p>
<h2 id="设置代码样式"><a href="#设置代码样式" class="headerlink" title="设置代码样式"></a>设置代码样式</h2><p>没有改，后面需要再说</p>
<p>参考链接1： <a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" rel="external nofollow noopener noreferrer" target="_blank">Hexo博客优化之Next主题美化_huangpiao-CSDN博客</a> </p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>终于配置完了，要死，（其实我是想写点 gdb 的来着？）</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hi, I&#39;m Cortana.</title>
    <url>/2019/12/Hi-Im-Cortana/</url>
    <content><![CDATA[<p>2020即将来临了，作为群贫困人口，在2019年再来看各位群友最后一面</p>
]]></content>
  </entry>
</search>
